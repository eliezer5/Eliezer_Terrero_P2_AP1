@page "/Create"
@inject HttpClient httpClient
<EditForm Model="vehiculos" OnValidSubmit="Guardar">
	<DataAnnotationsValidator/>
	<div class="card">
		<div class="card-header">
			<h2>Registro Vehiculo</h2>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label>VehiculoId</label>
				<InputNumber @bind-Value="vehiculos.VehiculoId"></InputNumber>
				<ValidationMessage For="(() => vehiculos.VehiculoId)"></ValidationMessage>
			</div>

			<div class="mb-3">
				<label>Descripci&oacute;n</label>
				<InputText @bind-Value="vehiculos.Descripcion"></InputText>
				<ValidationMessage For="(() => vehiculos.Descripcion)"></ValidationMessage>
			</div>

			<div class="mb-3">
				<label>Fecha</label>
				<InputDate @bind-Value="vehiculos.Fecha"></InputDate>
				<ValidationMessage For="(() => vehiculos.Fecha)"></ValidationMessage>
			</div>


			<div class="mb-3">
				<label>Costo</label>
				<InputNumber @bind-Value="vehiculos.Costo"></InputNumber>
				<ValidationMessage For="(() => vehiculos.Costo)"></ValidationMessage>
			</div>

			<div class="card-footer">
				<button><a href="/" class="btn btn-group">Atras</a></button>
				<button type="submit" class="btn btn-success">Guardar</button>
			</div>

		</div>
	</div>

	<div class="card">
		<div class="card-header">
			<h2>Vehiculo Detalle</h2>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label>Id</label>
				<InputNumber @bind-Value="vehiculosDetalle.Id"></InputNumber>
				<ValidationMessage For="(() => vehiculosDetalle.Id)"></ValidationMessage>
			</div>

			<div class="mb-3">
				<label>VehiculoId</label>
				<InputSelect @bind-Value=@vehiculosDetalle.VehiculoId class="form-control">
					@foreach (var vehiculo in listaVehiculo)
					{
						<option value="@vehiculo.Descripcion">@vehiculo.VehiculoId</option>
					}
				</InputSelect>
			</div>

			<div class="mb-3">
				<label>AccesorioId</label>
				<InputSelect @bind-Value=@accesorios.AccesoriosId class="form-control">
					@foreach (var accesorio in listaAcessorio)
					{
						<option value="@accesorio.Descripcion">@accesorio.AccesoriosId</option>
					}
				</InputSelect>
			</div>
			<div class="mb-3">
				<label>Costo</label>
				<InputNumber @bind-Value="vehiculosDetalle.Valor"></InputNumber>
				<ValidationMessage For="(() => vehiculosDetalle.Valor)"></ValidationMessage>
			</div>
		</div>

	</div>
</EditForm>
@code {
	public Vehiculos vehiculos { get; set; } = new Vehiculos();
	public Accesorios accesorios { get; set; } = new Accesorios();
	public List<VehiculosDetalle> listaDetalles = new List<VehiculosDetalle>();
	public VehiculosDetalle vehiculosDetalle = new VehiculosDetalle();

	public List<Vehiculos> listaVehiculo = new List<Vehiculos>();
	public List<Accesorios> listaAcessorio = new List<Accesorios>();



	protected override async Task OnInitializedAsync()
	{
		vehiculos.Fecha = DateTime.Now;

		listaAcessorio = await httpClient.GetFromJsonAsync<List<Accesorios>>("api/Accesorios");
		listaVehiculo = await httpClient.GetFromJsonAsync<List<Vehiculos>>("api/Vehiculos");


	}


	public async Task Guardar()
	{

		var response = await httpClient.PostAsJsonAsync("api/vehiculos", vehiculos);

		if (!response.IsSuccessStatusCode)
		{
			return;
		}
		var vehiculoDevuelto = await response.Content.ReadFromJsonAsync<Vehiculos>();
		if (vehiculoDevuelto is not null)
		{

			vehiculos = vehiculoDevuelto;
			vehiculosDetalle.VehiculoId = vehiculos.VehiculoId;
			vehiculosDetalle.AccesorioId = accesorios.AccesoriosId;
			StateHasChanged();
		}
	}

	public void nuevo()
	{
		vehiculos = new Vehiculos();
		vehiculosDetalle = new VehiculosDetalle();
	}

	public async Task AddDetalle()
	{
		var nuevoDetalle = new VehiculosDetalle()
			{
				VehiculoId = vehiculosDetalle.VehiculoId,
				Id = vehiculosDetalle.Id,
				AccesorioId = vehiculosDetalle.AccesorioId,
				Valor = vehiculosDetalle.Valor
			};

		listaDetalles.Add(nuevoDetalle);
		await httpClient.PostAsJsonAsync("api/Vehiculos", vehiculos);



		StateHasChanged(); 
	}
}
