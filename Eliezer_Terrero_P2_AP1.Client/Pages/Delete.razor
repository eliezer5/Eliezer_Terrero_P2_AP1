@page "/Delete/{VehiculoId:int}"
@inject HttpClient httpClient
<EditForm Model="vehiculos">
	<DataAnnotationsValidator />
	<div class="card">
		<div class="card-header">
			<h2>Registro Vehiculo</h2>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label>VehiculoId</label>
				<InputNumber @bind-Value="vehiculos.VehiculoId" readonly></InputNumber>
			</div>

			<div class="mb-3">
				<label>Descripci&oacute;n</label>
				<InputText @bind-Value="vehiculos.Descripcion" readonly></InputText>
			</div>

			<div class="mb-3">
				<label>Fecha</label>
				<InputDate @bind-Value="vehiculos.Fecha" readonly></InputDate>
			</div>


			<div class="mb-3">
				<label>Costo</label>
				<InputNumber @bind-Value="vehiculos.Costo" readonly></InputNumber>
			</div>

			<div class="card-footer">
				<button><a href="/" class="btn btn-group">Atras</a></button>
				<button type="submit" class="btn btn-warning">Eliminar</button>
			</div>

		</div>
	</div>
</EditForm>
@code {
	[Parameter]
	public int VehiculoId { get; set; }

	public Vehiculos vehiculos { get; set; } = new Vehiculos();
	public Accesorios accesorios { get; set; } = new Accesorios();
	public List<VehiculosDetalle> listaDetalles = new List<VehiculosDetalle>();
	public VehiculosDetalle vehiculosDetalle = new VehiculosDetalle();

	protected override async Task OnInitializedAsync()
	{
		vehiculos = await httpClient.GetFromJsonAsync<Vehiculos>($"api/Vehiculos/{VehiculoId}");
	}


	public async Task Eliminar()
	{
		var response = await httpClient.DeleteAsync($"api/Vehiculos/{VehiculoId}");
		

	}
}
